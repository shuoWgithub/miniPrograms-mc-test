{"version":3,"sources":["utils/util.js"],"names":["formatDate","source","format","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","uuid","s","hexDigits","i","random","join","module","exports"],"mappings":";;AAAA;;;;;;AAMA,SAASA,UAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,MAAMC,IAAI;AACR,UAAMF,OAAOG,QAAP,KAAoB,CADlB,EACqB;AAC7B,UAAMH,OAAOI,OAAP,EAFE,EAEgB;AACxB,UAAMJ,OAAOK,QAAP,EAHE,EAGiB;AACzB,UAAML,OAAOM,UAAP,EAJE,EAImB;AAC3B,UAAMN,OAAOO,UAAP,EALE,EAKmB;AAC3B,UAAMC,KAAKC,KAAL,CAAW,CAACT,OAAOG,QAAP,KAAoB,CAArB,IAA0B,CAArC,CANE,EAMuC;AAC/C,UAAMH,OAAOU,eAAP,EAPE,CAOuB;AAPvB,GAAV;AASA,MAAI,OAAOC,IAAP,CAAYV,MAAZ,CAAJ,EAAyB;AACvBA,aAASA,OAAOW,OAAP,CAAeC,OAAOC,EAAtB,EAA0B,CAACd,OAAOe,WAAP,KAAuB,EAAxB,EAA4BC,MAA5B,CAAmC,IAAIH,OAAOC,EAAP,CAAUG,MAAjD,CAA1B,CAAT;AACD;AACD,OAAK,IAAIC,CAAT,IAAchB,CAAd,EAAiB;AACf,QAAI,IAAIW,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+BV,MAA/B,CAAJ,EAA4C;AAC1CA,eAASA,OAAOW,OAAP,CAAeC,OAAOC,EAAtB,EAA2BD,OAAOC,EAAP,CAAUG,MAAV,KAAqB,CAAtB,GAA4Bf,EAAEgB,CAAF,CAA5B,GAAqC,CAAC,OAAOhB,EAAEgB,CAAF,CAAR,EAAcF,MAAd,CAAqB,CAAC,KAAKd,EAAEgB,CAAF,CAAN,EAAYD,MAAjC,CAA/D,CAAT;AACD;AACF;AACD,SAAOhB,MAAP;AACD;;AAED,SAASkB,IAAT,GAAgB;AACd,MAAIC,IAAI,EAAR;AACA,MAAIC,YAAY,kBAAhB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3BF,MAAEE,CAAF,IAAOD,UAAUL,MAAV,CAAiBR,KAAKC,KAAL,CAAWD,KAAKe,MAAL,KAAgB,IAA3B,CAAjB,EAAmD,CAAnD,CAAP;AACD;AACDH,IAAE,EAAF,IAAQ,GAAR,CANc,CAMA;AACdA,IAAE,EAAF,IAAQC,UAAUL,MAAV,CAAkBI,EAAE,EAAF,IAAQ,GAAT,GAAgB,GAAjC,EAAsC,CAAtC,CAAR,CAPc,CAOqC;AACnDA,IAAE,CAAF,IAAOA,EAAE,EAAF,IAAQA,EAAE,EAAF,IAAQA,EAAE,EAAF,IAAQ,GAA/B;;AAEA,MAAID,OAAOC,EAAEI,IAAF,CAAO,EAAP,CAAX;AACA,SAAOL,IAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiB,EAAE3B,sBAAF,EAAcoB,UAAd,EAAjB","file":"util.js","sourcesContent":["/**\n * 格式化时间\n * @param  {Datetime} source 时间对象\n * @param  {String} format 格式\n * @return {String}        格式化过后的时间\n */\nfunction formatDate (source, format) {\n  const o = {\n    'M+': source.getMonth() + 1, // 月份\n    'd+': source.getDate(), // 日\n    'H+': source.getHours(), // 小时\n    'm+': source.getMinutes(), // 分\n    's+': source.getSeconds(), // 秒\n    'q+': Math.floor((source.getMonth() + 3) / 3), // 季度\n    'f+': source.getMilliseconds() // 毫秒\n  }\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, (source.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n  for (let k in o) {\n    if (new RegExp('(' + k + ')').test(format)) {\n      format = format.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n    }\n  }\n  return format\n}\n\nfunction uuid() {\n  var s = [];\n  var hexDigits = \"0123456789abcdef\";\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n  s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n\n  var uuid = s.join(\"\");\n  return uuid;\n}\n\nmodule.exports = { formatDate, uuid }\n"]}