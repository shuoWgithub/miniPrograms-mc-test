{"version":3,"sources":["app.js"],"names":["wechat","require","util","Promise","App","data","name","version","userInfo","other","getUserInfo","resolve","reject","login","then","res","info","catch","console","error","onLaunch","log","onShow","onHide"],"mappings":";;AAAA;;;;;;AAMA,IAAMA,SAASC,QAAQ,gBAAR,CAAf;AACA,IAAMC,OAAOD,QAAQ,cAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,kBAAR,CAAhB;;AAEAG,IAAI;AACF;;;;AAIAC,QAAM;AACJC,UAAM,mBADF;AAEJC,aAAS,OAFL;AAGJC,cAAU;AAHN,GALJ;;AAWF;AACAC,SAAO,iBAZL;;AAcF;;;AAGAP,QAAMA,IAjBJ;;AAmBF;;;;AAIAQ,aAvBE,yBAuBa;AAAA;;AACb,WAAO,IAAIP,OAAJ,CAAY,UAACQ,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAI,MAAKP,IAAL,CAAUG,QAAd,EAAwB,OAAOG,QAAQ,MAAKN,IAAL,CAAUG,QAAlB,CAAP;AACxBR,aAAOa,KAAP,GACGC,IADH,CACQ;AAAA,eAAMd,OAAOU,WAAP,EAAN;AAAA,OADR,EAEGI,IAFH,CAEQ;AAAA,eAAOC,IAAIP,QAAX;AAAA,OAFR,EAGGM,IAHH,CAGQ;AAAA,eAAS,MAAKT,IAAL,CAAUG,QAAV,GAAqBQ,IAA9B;AAAA,OAHR,EAIGF,IAJH,CAIQ;AAAA,eAAQH,QAAQK,IAAR,CAAR;AAAA,OAJR,EAKGC,KALH,CAKS;AAAA,eAASC,QAAQC,KAAR,CAAc,qCAAqCA,KAAnD,CAAT;AAAA,OALT;AAMD,KARM,CAAP;AASD,GAjCC;;;AAmCA;;;;AAIFC,UAvCE,sBAuCU;AACVF,YAAQG,GAAR,CAAY,iDAAZ;AACD,GAzCC;;AA0CF;;;;AAIAC,QA9CE,oBA8CQ;AACRJ,YAAQG,GAAR,CAAY,+CAAZ;AACD,GAhDC;;AAiDF;;;;AAIAE,QArDE,oBAqDQ;AACRL,YAAQG,GAAR,CAAY,4CAAZ;AACD;AAvDC,CAAJ;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n * API module\n * @type {Object}\n * 用于将微信官方`API`封装为`Promise`方式\n * > 小程序支持以`CommonJS`规范组织代码结构\n */\nconst wechat = require('./utils/wechat')\nconst util = require('./utils/util')\nconst Promise = require('./utils/bluebird')\n\nApp({\n  /**\n   * Global shared\n   * 可以定义任何成员，用于在整个应用中共享\n   */\n  data: {\n    name: 'WeApp Boilerplate',\n    version: '0.1.0',\n    userInfo: null\n  },\n\n  // 不是只能定义`data`，别的也可以\n  other: 'other variables',\n\n  /**\n   *  util\n   */\n  util: util,\n\n  /**\n   * 获取用户信息\n   * @return {Promise} 包含获取用户信息的`Promise`\n   */\n  getUserInfo () {\n    return new Promise((resolve, reject) => {\n      if (this.data.userInfo) return resolve(this.data.userInfo)\n      wechat.login()\n        .then(() => wechat.getUserInfo())\n        .then(res => res.userInfo)\n        .then(info => (this.data.userInfo = info))\n        .then(info => resolve(info))\n        .catch(error => console.error('failed to get user info, error: ' + error))\n    })\n  },\n\n    /**\n   * 生命周期函数--监听小程序初始化\n   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）\n   */\n  onLaunch () {\n    console.log(' ========== Application is launched ========== ')\n  },\n  /**\n   * 生命周期函数--监听小程序显示\n   * 当小程序启动，或从后台进入前台显示，会触发 onShow\n   */\n  onShow () {\n    console.log(' ========== Application is showed ========== ')\n  },\n  /**\n   * 生命周期函数--监听小程序隐藏\n   * 当小程序从前台进入后台，会触发 onHide\n   */\n  onHide () {\n    console.log(' ========== Application is hid ========== ')\n  }\n})\n\n\n\n\n\n////自定义bar\n// editTabBar: function () {\n//   var tabbar = this.globalData.tabbar\n//   var currentPages = getCurrentPages()\n//   var _this = currentPages[currentPages.length - 1]\n//   var pagePath = _this.__route__;\n//   (pagePath.indexOf('/') !== 0) && (pagePath = '/' + pagePath)\n//   for (var i in tabbar.list) {\n//     tabbar.list[i].selected = false;\n//     (tabbar.list[i].pagePath === pagePath) && (tabbar.list[i].selected = true)\n//   }\n//   _this.setData({\n//     tabbar: tabbar\n//   })\n// },\n//\n// globalData: {\n//   userInfo: null,\n//     tabbar: {\n//     color: '#000000',\n//       selectedColor: '#0f87ff',\n//       backgroundColor: '#ffffff',\n//       borderStyle: 'black',\n//       list: [\n//       {\n//         pagePath: '/pages/discover/index',\n//         text: '发现',\n//         iconPath: '/images/btn_discover.png',\n//         selectedIconPath: '/images/btn_discover_HL.png',\n//         selected: true\n//       },\n//       {\n//         pagePath: '/pages/demo/demo',\n//         text: '艺术品',\n//         iconPath: '/images/btn_artwork.png',\n//         selectedIconPath: '/images/btn_artwork_HL.png',\n//         selected: false\n//       },\n//       {\n//         pagePath: '/pages/index/index',\n//         text: '共享订制',\n//         iconPath: '/images/btm_logo.png',\n//         selectedIconPath: '/images/btm_logo_HL.png',\n//         selected: false\n//       },\n//       {\n//         pagePath: '/pages/demo/demo',\n//         text: '艺术家',\n//         iconPath: '/images/btn_artist.png',\n//         selectedIconPath: '/images/btn_artist_HL.png',\n//         selected: false\n//       },\n//       {\n//         pagePath: '/pages/demo/demo',\n//         text: '我的',\n//         iconPath: '/images/btn_me.png',\n//         selectedIconPath: '/images/btn_me_HL.png',\n//         selected: false\n//       }\n//     ],\n//       position: 'bottom'\n//   }\n// },\n"]}